Program event_management_program
Begin
    Import os module, time module
    Declare working_path, users_file, events_file, payments_file as string
    Declare categories, description, cart, price_list as array of string

    working_path = Get current working directory using os module
    users_file = working_path + "/data/users.txt"
    events_file = working_path + "/data/events.txt"
    payments_file = working_path + "/data/payments.txt"

    categories = ['Weddings', 'Concerts', 'Talent_Shows', 'Seminars', 'Brand_Activation']

    description = ['Wedding planning inclusive of emcee and flower bouquet.', 'Concert ticketing planning with small pantry and welcoming drinks.', 'Talent shows planning with judges and trophy.', 'Seminars planning with motivational speaker and lecturer.', 'Brand Activation campaign with red lion and ribbon cutting cerermony.']

    cart = []

    price_list = []

    Function clear_screen()
        Using os module:
            Clear screen
    Endfunction

    Function event_prompt(choice)
        Declare parameter choice as any type
        If choice is not integer return choice as String replacing ' ' with '_'

        If choice is 1:
            Return categories[0]
        Elseif choice is 2:
            Return categories[1]
        Elseif choice is 3:
            Return categories[2]
        Elseif choice is 4:
            Return categories[3]
        Elseif choice is 5:
            Return categories[4]
    Endfunction

    Function display_categories()
        Declare element as string
        Print("Event Categories: ")
        For element in categories
            Print(Index of element + 1, ": ", element replaced '_' with ' ')
        Endfor
    Endfunction

    Function event_list()
        Declare event_details as array of string
        Declar category, event_index, event_category, event_name, event_date, event_time, event_venue, event_price, event_capacity as string
        Declare found as bool

        found = False

        Call function display_categories()

        Print("Event Category: ")
        Get category
        event_prompt(category)

        Open events_file in READ mode
            Read lines of file into filehandler
            For line in filehandler
                Split line into event_details using " " as delimiter
                event_index = event_details[0]
                event_category = event_details[1]
                event_name = event_details[2]
                event_date = event_details[3]
                event_time = event_details[4]
                event_venue = event_details[5]
                event_price = event_details[6]
                event_capacity = event_details[7]
                If event_category is category then
                    found = True 
                    Print(
                        "Event no.", event_index, "→ Category: ", event_category, "Name: ", event_name with '_' replaced as ' ', "Date: ", event_date, "Time: ", event_time, "Venue: ", event_venue with '_' replaced as ' ', "Price (RM): ", event_price, "Capacity: ", event_capacity
                    )
            Endfor
        Close filehandler
        Return found
    Endfunction

    Function count_line(file)
        Declare parameter file as string
        Declare line_number as integer
        Open file in READ mode
            Read lines of file into filehandler
            line_number = 1
            For line in filehandler
                line_number = line_number + 1
            Endfor
        Close filehandler
        Return line_number
    Endfunction

    Function admin(username)
        Declare parameter username as string
        Declare choice as integer

        Function add_event()
            Declare event_number as integer
            Declare event_category, event_name, event_date, event_time, event_venue, event_price, event_capacity as string

            Call function clear_screen()

            Print("Add Event.")

            Call function display_categories()
            event_number = count_line(events_file)

            Print("Event Category: ")
            Get category
            event_prompt(category)

            Print("Event Name: ")
            Get event_name
            event_prompt(event_name)

            Print("Event Date: ")
            Get event_date
            event_prompt(Get event_date)

            Print("Event Time: ")
            event_prompt(Get event_time)

            Print("Event Venue: ")
            event_prompt(Get event_venue)

            Print("Event Price: ")
            event_prompt(Get event_price)

            Print("Event Capacity: ")
            event_prompt(Get event_capacity)

            Open events_file in APPEND mode as filehandler
                Write event_number, " ", event_category, " ", event_name, " ", event_date, " ", event_time, " ", event_venue, " ", event_price, " ", event_capacity, "\n" to filehandler
            Close filehandler
            Print("Event added.")
            Return to admin(username)
        Endfunction

        Function modify_event()
            Declare event_to_modify, choice as integer
            Declare filedata, modified_filedata as array of string
            Declare temp_line, event_category, event_name, event_date, event_time, event_venue, event_price, event_capacity, new_category, new_name, new_date, new_time, new_venue, new_price, new_capacity, string, item as string
            Declare event_found as boolean

            Call function clear_screen()
            Print("List of events... choose a category to dislay an event!")
            event_found = event_list()

            Open events_file in READ mode
                Read lines of file into filehandler
                Split filehandler into filedata using '\n' as delimiter
            Close filehandler

            For line in filedata:
                temp_line = line
                If event_found is True then
                    Print("Modify event. Please enter the event number to modify: ")
                    Print("Event number: )
                    Get event_to_modify

                    If first char of line is event_to_modify then
                        Split line into event_details using " " as delimiter
                        event_index = event_details[0]
                        event_category = event_details[1]
                        event_name = event_details[2]
                        event_date = event_details[3]
                        event_time = event_details[4]
                        event_venue = event_details[5]
                        event_price = event_details[6]
                        event_capacity = event_details[7]

                        Print("Event no. ", event_index, "→ Category: ", event_category, "Name: ", event_name with '_' replaced as ' ', "Date: ", event_date, "Time: ", event_time, "Venue: ", event_venue with '_' replaced as ' ', "Price: ", event_price, "Capacity: ", event_capacity)

                        Print("Please enter the field you want to modify: ")
                        Print("1. Category")
                        Print("2. Name")
                        Print("3. Date")
                        Print("4. Time")
                        Print("5. Venue")
                        Print("6. Price")
                        Print("7. Capacity")
                        Print("8. Delete line")
                        Print("9. Back")

                        Print("Choice: ")
                        Get choice

                        If choice is 1 then
                            Call function display_categories()
                            Print("Event Category: ")
                            Get new_category
                            event_category = event_prompt(new_category)
                        Elsef choice is 2 then
                            Print("Event Name: ")
                            Get new_name
                            event_name = event_prompt(new_name)
                        Elseif choice is 3 then
                            Print("Event Date: ")
                            Get new_date
                            event_date = event_prompt(new_date)
                        Elseif choice is 4 then
                            Print("Event Time: ")
                            Get new_time
                            event_time = event_prompt(new_time)
                        Elseif choice is 5 then
                            Print("Event Venue: ")
                            Get new_venue
                            event_venue = event_prompt(new_venue)
                        Elseif choice is 6 then
                            Print("Event Price: ")
                            Get new_price
                            event_price = event_prompt(new_price)
                        Elseif choice is 7 then
                            Print("Event Capacity: ")
                            Get new_capacity
                            event_capacity = event_prompt(new_capacity)
                        Elseif choice is 8 then
                            line = ""
                        Elseif choice is 9 then
                            Return to admin(username)
                        Endif

                        If choice is not 1 to 9 then
                            Print("Invalid input. Try again!")
                            Return to admin(username)
                        Endif

                        modified_filedata = []

                        For item in filedata
                            If item is temp_line then
                                item = item with temp_line replaced as line
                                If item is not empty then
                                    Append item to modified_filedata
                                Endif
                            Endif
                        Endfor

                        For item in modified_filedata
                            item = item with first char replaced as index of item + 1
                        Endfor

                        Open events_file in WRITE mode as filehandler
                            Write lines of modified_filedata to filehandler
                        Close filehandler

                        Print("Event modified.")
                        Return to admin(username)
                    Endif
                Endfor
            Endif
            Print("No event found!")
        Endfunction

        Function display_event()
            Declare choice as string
            Declare event_found as boolean

            Call function clear_screen()
            Print("Displaying all events...")
            event_found = event_list()
            If event_found is False then
                Print("No event found in this category!")
            Endif

            Print("Type 'e' to exit when ready: ")
            Get choice
            If lowercase of choice is not 'e' then
                Print("Invalid input!")
                Delay for 2 seconds
                Return to display_event()
            Else
                Return to admin(username)
            Endif
        Endfunction

        Function customer_details()
            Declare choice as integer

            Function display_customer_registration()
                Declare user, permission, registration_date, choice as string

                Call function clear_screen()
                Open users_file in READ mode
                    Read lines of file into filehandler
                    For line in filehandler
                        Split line into user_details using " " as delimiter
                        user = user_details[0]
                        permission = user_details[2]
                        registration_date = user_details[3]
                        If permission is not 'True' then    
                            Print("User: ", user, "Registration date: ", registration_date)
                        Endif
                    Endfor
                Close filehandler

                Print("Type 'e' to exit when ready: ")
                Get Choice
                If lowercase of choice is not 'e' then
                    Print("Invalid input!")
                    Return to display_customer_registration()
                Else
                    Return to admin(username)
                Endif
            Endfunction

            Function display_customer_payment
                Declare payment_date, transaction_id, payment_username, payment_total, events, choice as string
                Declare number_of_events_going as integer
                Declare payment_details, event_details as array of string

                number_of_events_going = 0

                Call function clear_screen()

                Open users_file in READ mode
                    Read lines of file into pfilehandler
                    For pline in pfilehandler
                        Split pline into payment_details using " " as delimiter
                        payment_details = pline.split()
                        transaction_id = payment_details[0]
                        payment_username = payment_details[1]
                        payment_total = payment_details[2]
                        payment_date = payment_details[4]

                        Split payment_details[3] with "_" replaced as " " into events
                        While number_of_events_going is less than length of events then
                            number_of_events_going = number_of_events_going + 1
                        Endwhile

                        Print("Transaction ID: ", transaction_id, ", Username: ", payment_username, ", Total: ", payment_total, ", Date of payment: ", payment_date, ", Going for ", number_of_events_going, "events")
                        Print("Event details: ")

                        For event in events
                            Open events_file in READ mode
                                Read lines of file into efilehandler
                                For eline in efilehandler
                                    If first char of eline is equal to event then
                                        Split eline into event_details using " " as delimiter
                                        event_name = event_details[2]
                                        Print("Event no.", event, "→ Name: ", event_name with "_" replaced as " ")
                                    Endif
                                Endfor
                            Close efilehandler
                        Endfor
                    Endfor
                Close pfilehandler

                Print("Type 'e' to exit when ready: ")
                Get Choice
                If lowercase of choice is not 'e' then
                    Print("Invalid input!")
                    Return to display_customer_payment()
                Else
                    Return to admin(username)
                Endif

            Function search_customer_registration()
                Declare search_username, choice, user, permission, registration_date as string
                Declare user_details as array of string

                Call function clear_screen()
                Print("Search customer registration.")
                Print("Search username: ")
                Get search_username
                Open users_file in READ mode
                    Print("Searching usernames starting with '", search_username, "'...")
                    Read lines of file into filehandler
                    For line in filehandler
                        Split line into user_details using " " as delimiter
                        user = user_details[0]
                        permission = user_details[2]
                        registration_date = user_details[3]
                        If user starts with search_username and permission is not 'True' then
                            Print("User: ", user, "Registration date: ", registration_date)
                        Endif
                    Endfor
                Close filehandler
                Print("Type 'e' to exit when ready: ")
                Get Choice
                If lowercase of choice is not 'e' then
                    Print("Invalid input!")
                    Return to search_customer_registration()
                Else
                    Return to admin(username)
                Endif
            Endfunction

            Function search_customer_payment()
                Declare payment_found as boolean
                Declare search_query, choice as string
                Declare number_of_events_going as integer
                Declare event_details, payment_details as array of string
                Call function clear_screen()
                Print("Search customer payment.")

                payment_found = False
                number_of_events_going = 0

                Print(
                    "Search query (input username or transaction ID): ")
                Get search_query

                Open payments_file in READ mode
                    Read lines of file into pfilehandler
                    For pline in pfilehandler
                        Split pline into payment_details using " " as delimiter
                        payment_details = pline.split()
                        transaction_id = payment_details[0]
                        payment_username = payment_details[1]
                        payment_total = payment_details[2]
                        payment_date = payment_details[4]

                        Split payment_details[3] with "_" replaced as " " into events
                        While number_of_events_going is less than length of events then
                            number_of_events_going = number_of_events_going + 1
                        Endwhile

                        If payment_username is search_query or transaction_id is search_query then
                            payment_found = True
                            Print("Transaction ID: ", transaction_id, ", Username: ", payment_username, ", Total: ", payment_total, ", Date of payment: ", payment_date, ", Going for ", number_of_events_going, "events")
                            Print("Event details: ")

                            For event in events
                                Open events_file in READ mode
                                    Read lines of file into efilehandler
                                    For eline in efilehandler
                                        If first char of eline is equal to event then
                                            Split eline into event_details using " " as delimiter
                                            event_name = event_details[2]
                                            Print("Event no.", event, "→ Name: ", event_name with "_" replaced as " ")
                                        Endif
                                    Endfor
                                Close efilehandler
                            Endfor
                        Endif
                    Endfor
                Close pfilehandler
                If payment_found is False then
                    Print("No results from search query.")
                Endif

                Print("Type 'e' to exit when ready: ")
                Get Choice
                If lowercase of choice is not 'e' then
                    Print("Invalid input!")
                    Return to search_customer_payment()
                Else
                    Return to admin(username)
            Endfunction

            Call function clear_screen()
            Print("Customer details! Select an option below: ")
            Print("1. Display all customer registration")
            Print("2. Display customer payment")
            Print("3. Search customer registration")
            Print("4. Search customer payment")
            Print("5. Back")

            Print("Choice: ")
            Get choice
            If choice is 1 then
                Call function display_customer_registration()
            Elseif choice is 2 then
                Call function display_customer_payment()
            Elseif choice is 3 then
                Call function search_customer_registration()
            Elseif choice is 4 then
                Call function search_customer_payment()
            Elseif choice is 5 then
                Return to admin(username)
            Endif
        Endfunction
    
        Call function clear_screen()
        Print("Hi ", username, "! Welcome to the admin panel! Select options below: ")
        Print("1. Creat event.")
        Print("2. Modify event.")
        Print("3. Display all records")
        Print("4. More options for customer details.")
        Print("5. Log out.")
        
        Print("Choice: ")
        Get choice
        If choice is 1 then
            Call function add_event()
        Elseif choice is 2 then
            Call function modify_event()
        Elseif choice is 3 then
            Call function display_event()
        Elseif choice is 4 then
            Call function customer_details()
        Elseif choice is 5 then
            Print("Logging out...")
            Call function clear_screen()
            Return to main()
        Else
            Print("Error! Invalid input. Try again!")
            Return to admin(username)
        Endif
    Endfunction

    Function view_events()
        Declare choice as integer
        Declare event_found as bool
        Call function clear_screen()

        Print("Welcome! Select your options below!")
        Print("1. View all events by category.")
        Print("2. Back")

        Print("Choice: ")
        Get choice
        If choice is not 1 and is not 2 then
            Print("Invalid input!")
            Return to main()
        If choice is 2 then
            Return to main()
        Endif
        Call function clear_screen()
        event_found = event_list()
        If event_found is false then
            Print("No events found!")
        Endif
    Endfunction

    Function customer(username)
        Call function clear_screen()
        Declare options as integer
        print("Welcome ,username,! Select options below: ")
        print("1. View event details.")
        print("2. Add events to cart.")
        print("3. Checkout.")
        print("4. Exit.")
        Function selection()
            Declare selection_choice as integer
            Declare choice as string
            Call function clear_screen()
            Print("1. Event categories")
            Print("2. Event details")
            
            Print("Select an option to view details: ")
            Get selection_choice
            If selection_choice = 1 then 
                For item in description:
                    Print(Index of item + 1, ". ", item)
                    Return to customer()
                Endfor
            Elseif selection_choice = 2 then
                event_found = event_list()
                Print("No event found in this category!") If event is not found Else Do nothing
            Endif
            Print("Type 'e' to exit when done: ")
            Get choice
                If lowercase of choice is not "e" then
                    Print("Invalid input")
                    Return to selection()
                Else 
                    Return to customer(username)
                Endif
        Endfunction

        Function cart_function()
        Declare cart_prompt as integer
            valid_event_list = []
            
            Open users_file in READ mode
                Read lines of file into pfilehandler
                For pline in pfilehandler
                    event_details = line.split()
                    event_index = event_details[0]
                    event_category = event_details[1]
                    event_name = event_details[2]
                    event_date = event_details[3]
                    event_time = event_details[4]
                    event_venue = event_details[5]
                    event_price = event_details[6]
                    event_capacity = event_details[7]

                    Print(f"Event no. ,event_index, Category: ,event_category, , Name:, event_name, Date: ,event_date,, Time: ,event_time,, Venue: ,event_venue.replace,, Price: ,event_price,, Capacity: ,event_capacity,")
                    valid_event_list.append(event_index)
            Close filehandler
            exited == False
            While exited == False then
                Print ("Enter event number to add to cart or type 'e' to exit: ")
                Get cart_prompt

                If cart_prompt is not same as valid_event_list && cart_prompt is not "e" then
                    Print ("Event does not exist! ")
                    return cart_function()
                Elseif cart_prompt = "e" then
                    exited = True 
                    return customer(username)
                Endif
                If cart_prompt in cart then
                    Print ("Event is already in cart! ")
                    return cart_function()

                cart.append(cart_prompt)
                Endif

                for event in cart 
                    Open users_file in READ mode
                        Read lines of file into pfilehandler
                        For pline in pfilehandler
                        event_details = line.split()
                        event_index = event_details[0]
                            event_price = event_details[6]
                            If event_index = event then
                                price_list.append(event_price)
                            Endif
                        Endfor
                    Close filehandler
                Endfor
            return customer(username)
        Endfunction

        Function checkout()
            Call function clear_screen()
            Function events_in_cart()
            Declare event, event_name as string
                for events in cart 
                    Open users_file in READ mode
                        Read lines of file into pfilehandler
                        For pline in pfilehandler
                            event_details = line.split()
                            event_index = event_details[0]
                            event_name = event_details[2]
                            Close filehandler
                            If event_index = event then 
                            Print("Event no., event, &&, event_name,")
                            Endif
                        Endfor
                    Close filehandler
                Endfor
            Endfunction
                    
            Function total_price_cart()
            Declare total, checkout_prompt as integer 
            Declare modify_cart_prompt,remove_item_prompt, transaction_id as string
                total = 0
                for price in price_list
                    total += int(price)
                return total
                Endfor

            total = total_price_cart()

            Print("Please review cart below!")
            Print("Events you are going for: ")
            Call function events_in_cart()
            Print("Total price: ,total,RM")

            Print("Would you like to modify your cart? Type 'm' to modify cart , 'c' to checkout, or 'e' to exit: ")
            Get modify_cart_prompt
            If lowercase of modify_cart_prompt is not 'm' then
                Print("Current events in cart: ")
                Call function events_in_cart()

                Print("Enter event number to remove from cart: ")
                Get remove_item_prompt
                If remove_item_promt is not in cart then 
                    return
                Endif

                    cart.remove(remove_item_prompt)
                    Open users_file in READ mode
                        Read lines of file into pfilehandler
                        For pline in pfilehandler
                            event_details = line.split()
                            event_index = event_details[0]
                            If event_index == remove_item_prompt then
                                price_list.remove(event_details[6])
                            Endif
                        Endfor
                    Close filehandler
                    Print("New events in cart: ")
                    Call function events_in_cart()
                    Print("Total price: ,total, RM")
                    return customer(username)

            Elseif lowercase of modify_cart_prompt is not 'c' then
                Print("Checking out...\n\nAvailable payment methods: \n1. Credit/Debit Card Payment\n2. Bank Transfer")
                Print("Select payment method: ")
                Get checkout_prompt
                If checkout_prompt == 1 then  
                    input("Enter name on card: ")
                    input("Enter card number: ")
                    input("Enter expiry date: ")
                    input("Enter CVV: ")
                    print("Payment successful!")
                Elseif checkout_prompt == 2 then
                    input("Enter bank name: ")
                    input("Enter account number: ")
                    print("Payment successful!")
                Else 
                    print("Invalid input! ")
                Endif
                    
                transaction_id = int(time.time())

                transaction_date = time.strftime("%d/%m/%Y")

                file_to_write = transaction_id + username + total + cart + transaction_date

                Open users_file in APPEND mode
                    Write file_to_write
                Close filehandler 

                Print("Your transaction ID: ,transaction_id,\nPlease copy this number and save it for future reference.")
                input("Enter any character to exit: ")
                    
                cart.clear()
                price_list.clear()
                return customer(username)
                
            Elseif lowercase of modify_cart_prompt is 'e' then
                return customer(username)
            Endif
            return customer(username)
            Endfunction
        Endfunction

        Print("Choice: ")
        Get options
        If options == 1 then
            Call function selection()
        Elseif options == 2 then
            Call function cart_function()
        Elseif options == 3 then 
            Call function checkout()
        Elseif options == 4 then 
            cart.clear()
            price_list.clear()
            Call function clear_screen()
            return
        Else    
            print("Invalid choice. ")
            Call function clear_screen()
            return customer(username)
        Endif
    Endfunction

                


    Function sign_up()
        Declare username, password, confirm_password as string
        Declare user_permission as boolean
        Declare user_details as array of string

        Print("Sign up for an account.")
        Print("Username: ")
        Get username
        Print("Password: ")
        Get password
        Print("Confirm password: ")
        Get confirm_password

        If length of password is less than 8 then
            Print("Password must be at least 8 characters long!")
            return sign_up()
        Endif

        If confirm_password is not equal to password then
            Print("Passwords do not match.")
            return sign_up()
        Endif

        Open users_file in READ mode
            Read lines of file into filehandler
            For line in filehandler
                Split line into user_details using " " as delimiter
                If user_details[0] is username then
                    Print("Username already exists!")
                    return sign_up()
                Endif
            Endfor
        Close filehandler

        user_permission = False
        date_registered = Date today using time module

        Open users_file in APPEND mode
            Write username, " ", password, " ", user_permission, " ", date_registered, "\n"
        Close filehandler

        Print("Account created")
        Call function clear_screen()
        Return main()
    
    Function log_in()
        Declare username, password as string

        Print("Log in to your account.")
        Print("Username: ")
        Get username
        Print("Password: ")
        Get password

        Open users_file in READ mode
            Read lines of file into filehandler
            For line in filehandler
                Split line into user_details using " " as delimiter
                If user_details[0] is username and user_details[1] is password then
                    Print("Logged in")
                    If user_details[2] is 'True' then
                        Call function admin(username)
                    Else
                        Call function customer(username)
                    Endif
                    Return
                Endif
            Endfor
        Close filehandler

        Print("Invalid username or password.")
        Call function clear_screen()
        Return log_in()
    Endfunction

    Function main()
        Declare choice as integer
        Call function clear_screen()
        Print("Welcome to Asian Event Management Services! Select option below: ")
        Print("1. Sign up.")
        Print("2. Log in.")
        Print("3. View events.")
        Print("4. Exit.")

        Print("Choice: ")
        Get choice
        If choice is 1 then
            Call function sign_up()
        Elseif choice is 2 then
            Call function log_in()
        Elseif choice is 3 then
            Call function view_events()
        Elseif choice is 4 then
            Print("Exiting...")
            Call function clear_screen()
            return
        Else
            Print("Invalid choice.")
            Call function clear_screen()
            return main()
        Endif
        main()
    Endfunction

    Call function main()
End